{"version":3,"sources":["redux/postsTypes.tsx","redux/postsActions.js","services/api-service.tsx","redux/postsOperations.js","components/PostItem/PostItem.tsx","components/AddForm/AddForm.js","redux/postsSelectors.tsx","components/AddForm/AddFormContainer.js","components/PostsList/PostsList.tsx","components/PostsList/PostsListContainer.js","components/NotFound/NotFound.tsx","components/HeaderBlock/HeaderBlock..tsx","routes.js","components/Navigation.tsx","components/App.js","redux/postsReducer.js","redux/rootReducer.tsx","redux/store.js","index.js"],"names":["postsTypes","SET_ITEMS","APPEND_ITEM","REMOVE_ITEM","items","type","payload","id","axios","require","defaults","baseURL","headers","get","post","put","delete","dispatch","api","then","data","postsActions","connect","fetchRemoveItem","value","PostsListActions","item","title","body","Item","to","Title","Body","Button","onClick","style","div","h2","h3","button","AddForm","props","state","handleChangeField","bind","handleSubmit","nextProps","this","setState","onSubmit","res","key","event","preventDefault","target","Form","FormBlock","Label","for","onChange","ev","placeholder","React","Component","form","label","AddFormContainer","createNewPost","selector","Items","map","PostsListContainer","fetchItems","NotFound","HeaderBlock","description","imageUrl","backgroundImage","color","textTransform","defaultProps","Navigation","NavBlock","NavigationBar","NavItems","exact","routes","textDecoration","NavTitle","ul","li","h4","App","AppStyle","path","component","PostsList","combineReducers","action","filter","rootReducer","postsReduser","middleware","thunk","composeEnhancers","composeWithDevTools","applyMiddleware","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f931d32d.chunk.js","sourcesContent":["const postsTypes = {\r\n  SET_ITEMS: \"posts/POSTS:SET_ITEMS\",\r\n  APPEND_ITEM: \"posts/POSTS:APPEND_ITEM\",\r\n  REMOVE_ITEM: \"posts/POSTS:REMOVE_ITEM\"\r\n};\r\n\r\nexport default postsTypes;\r\n\r\ninterface getItemsAC {\r\n  type: typeof postsTypes.SET_ITEMS;\r\n}\r\n\r\ninterface setItemsAC {\r\n  type: typeof postsTypes.APPEND_ITEM;\r\n  payload: {};\r\n}\r\n\r\ninterface removeItemsAC {\r\n  type: typeof postsTypes.REMOVE_ITEM;\r\n}\r\n\r\nexport type ACTypes = getItemsAC | setItemsAC | removeItemsAC;\r\n","import postsTypes from \"./postsTypes\";\r\n\r\nconst setItems = items => ({\r\n  type: postsTypes.SET_ITEMS,\r\n  payload: items\r\n});\r\n\r\nconst appendItem = item => ({\r\n  type: postsTypes.APPEND_ITEM,\r\n  payload: item\r\n});\r\n\r\nconst removeItem = id => ({\r\n  type: postsTypes.REMOVE_ITEM,\r\n  payload: id\r\n});\r\n\r\nexport default { setItems, appendItem, removeItem };\r\n","const axios = require(\"axios\");\r\naxios.defaults.baseURL = \"https://simple-blog-api.crew.red\";\r\naxios.defaults.headers.get[\"Content-Type\"] = \"application/json\";\r\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json\";\r\naxios.defaults.headers.put[\"Content-Type\"] = \"application/json\";\r\n\r\ninterface apiData {\r\n  id: number;\r\n}\r\n\r\nconst getPosts = () => {\r\n  return axios.get(`/posts`);\r\n};\r\n\r\nconst getPost = (id: number) => {\r\n  axios.get<apiData>`/posts/${id}?_embed=comments`;\r\n};\r\n\r\nconst removePost = (id: number) => {\r\n  axios.delete<apiData>`/posts/${id}`;\r\n};\r\n\r\nexport default {\r\n  getPosts,\r\n  getPost,\r\n  removePost\r\n};\r\n","import postsActions from \"./postsActions\";\r\nimport api from \"../services/api-service\";\r\n\r\nconst fetchItems = () => dispatch => {\r\n  api.getPosts().then(({ data }) => {\r\n    dispatch(postsActions.setItems(data));\r\n  });\r\n};\r\n\r\nconst fetchItem = id => dispatch => {\r\n  api.getPosts(id).then(({ data }) => {\r\n    dispatch(postsActions.appendItem(data));\r\n  });\r\n};\r\n\r\nconst fetchRemoveItem = id => dispatch => {\r\n  dispatch(postsActions.removeItem(id));\r\n  api.removePost(id);\r\n};\r\n\r\nexport default {\r\n  fetchItems,\r\n  fetchItem,\r\n  fetchRemoveItem\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport style from \"styled-components\";\r\nimport PostsListActions from \"../../redux/postsOperations\";\r\n\r\ninterface ItemProps {\r\n  title: string;\r\n  body: string;\r\n  id: number;\r\n}\r\n\r\ninterface PostItemProps {\r\n  item: ItemProps;\r\n  fetchRemoveItem: (id: number) => void;\r\n}\r\n\r\nconst PostItem: React.FC<PostItemProps> = ({\r\n  item: { title, body, id },\r\n  fetchRemoveItem\r\n}) => {\r\n  const deleteItem = () => fetchRemoveItem(id);\r\n\r\n  return (\r\n    <Item>\r\n      <Link to={`/posts/${id}`}></Link>\r\n      <Title>{title}</Title>\r\n      <Body>{body}</Body>\r\n      <Button onClick={deleteItem}>Remove</Button>\r\n    </Item>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n  fetchRemoveItem: (value: any) =>\r\n    dispatch(PostsListActions.fetchRemoveItem(value))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(PostItem);\r\n\r\nconst Item = style.div`\r\nborder: #ECECEC 3px solid;`;\r\n\r\nconst Title = style.h2`\r\n  text-transform: uppercase;\r\n  font-family: Georgia, \"Times New Roman\", Times, serif;\r\n  font-size: 24px;\r\n  letter-spacing: 1px;\r\n  width: 100%;\r\n  color: #465457;`;\r\n\r\nconst Body = style.h3`\r\n  color: #191970;\r\n  font-family: Georgia, \"Times New Roman\", Times, serif;\r\n  font-size: 20px;\r\n  max-width: 700px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  `;\r\n\r\nconst Button = style.button`\r\n    background:  #ADD8E6;\r\n    font-size: 14px;\r\n\t\tborder-radius: 15px;\r\n\t\tpadding: 10px 20px;\r\n\t\tdisplay: block;\r\n\t\tfont-family: arial;\r\n\t\tfont-weight: bold;\r\n    color: #008B8B;\r\n\t\ttext-decoration: none;\r\n\t\ttext-shadow:0px 1px 0px #fff;\r\n\t\tborder:1px solid #a7a7a7;\r\n\t\twidth: 145px;\r\n\t\tmargin:0px auto;\r\n\t\tbox-shadow: 0px 2px 1px white inset, 0px -2px 8px white, 0px 2px 5px rgba(0, 0, 0, 0.1), 0px 8px 10px rgba(0, 0, 0, 0.1);\r\n    -webkit-transition:box-shadow 0.5s;`;\r\n","import React from \"react\";\r\nimport style from \"styled-components\";\r\nconst axios = require(\"axios\");\r\n\r\nclass AddForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      title: \"\",\r\n      body: \"\"\r\n    };\r\n\r\n    this.handleChangeField = this.handleChangeField.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps) {\r\n      this.setState({\r\n        title: nextProps.title,\r\n        body: nextProps.body\r\n      });\r\n    }\r\n  }\r\n\r\n  handleSubmit() {\r\n    const { onSubmit } = this.props;\r\n    const { title, body } = this.state;\r\n\r\n    return axios\r\n      .post(\"https://simple-blog-api.crew.red/posts\", {\r\n        title,\r\n        body\r\n      })\r\n      .then(res => onSubmit(res.data))\r\n      .then(() => this.setState({ title: \"\", body: \"\" }));\r\n  }\r\n\r\n  handleChangeField(key, event) {\r\n    event.preventDefault();\r\n    this.setState({\r\n      [key]: event.target.value\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { title, body } = this.state;\r\n\r\n    return (\r\n      <Form>\r\n        <FormBlock>\r\n          <h4>\r\n            <Label for=\"title\">Post title</Label>\r\n          </h4>\r\n          <input\r\n            onChange={ev => this.handleChangeField(\"title\", ev)}\r\n            value={title}\r\n            type=\"text\"\r\n            id=\"title\"\r\n            placeholder=\"Enter post title\"\r\n          />\r\n        </FormBlock>\r\n        <FormBlock>\r\n          <h4>\r\n            <Label for=\"description\">Description</Label>\r\n          </h4>\r\n          <textarea\r\n            onChange={ev => this.handleChangeField(\"body\", ev)}\r\n            value={body}\r\n            placeholder=\"Enter text\"\r\n            id=\"description\"\r\n          />\r\n        </FormBlock>\r\n        <Button type=\"submit\" onClick={this.handleSubmit}>\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddForm;\r\n\r\nconst Form = style.form`\r\n  font-size: 20px;\r\n  max-width: 900px;\r\n\tpadding: 10px 20px;\r\n\tbackground: #f4f7f8;\r\n  margin: 10px auto;\r\n\tpadding: 20px;\r\n\tbackground: #f4f7f8;\r\n\tborder-radius: 8px;\r\n  font-family: Georgia, \"Times New Roman\", Times, serif;\r\n`;\r\n\r\nconst FormBlock = style.label`\r\n  text-align: center;\r\n  background: #ECECEC;\r\n\tcolor: #40a9ff;\r\n\tfont-size: 0.8em;\r\n\tmargin-right: 4px;\r\n\tline-height: 30px;\r\n\ttext-shadow: 0 1px 0 rgba(255,255,255,0.2);\r\n  border-radius: 15px 15px 15px 0px;`;\r\n\r\nconst Label = style.label`\r\n  font-size: 26px;\r\n  margin: 20px;\r\n  `;\r\n\r\nconst Button = style.button`\r\n    background: #ADD8E6;\r\n    font-size: 14px;\r\n\t\tborder-radius: 10px;\r\n\t\tpadding: 10px 20px;\r\n\t\tdisplay: block;\r\n\t\tfont-family: arial;\r\n\t\tfont-weight: bold;\r\n    color: #008080;\r\n\t\ttext-decoration: none;\r\n\t\ttext-shadow:0px 1px 0px #fff;\r\n\t\tborder:1px solid #a7a7a7;\r\n\t\twidth: 145px;\r\n\t\tmargin:0px auto;\r\n\t\tbox-shadow: 0px 2px 1px white inset, 0px -2px 8px white, 0px 2px 5px rgba(0, 0, 0, 0.1), 0px 8px 10px rgba(0, 0, 0, 0.1);\r\n    -webkit-transition:box-shadow 0.5s;`;\r\n","import { AppStateType } from \"./rootReducer\";\r\n\r\nconst getAllPosts = (state: AppStateType) => state.items && state.items.items;\r\n\r\nexport default {\r\n  getAllPosts\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport AddForm from \"./AddForm\";\r\nimport selector from \"../../redux/postsSelectors\";\r\n\r\nclass AddFormContainer extends React.Component {\r\n  render() {\r\n    const { createNewPost } = this.props;\r\n    return <AddForm createNewPost={createNewPost} />;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  items: selector.getAllPosts(state)\r\n});\r\n\r\nexport default connect(mapStateToProps)(AddFormContainer);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PostItem from \"../PostItem\";\r\nimport selector from \"../../redux/postsSelectors\";\r\nimport style from \"styled-components\";\r\n\r\ninterface ItemPostsProps {\r\n  id: number;\r\n  title: string;\r\n  body: string;\r\n}\r\n\r\ninterface PostsListProps {\r\n  items: [ItemPostsProps];\r\n}\r\n\r\nconst PostsList: React.FC<PostsListProps> = ({ items }) => {\r\n  return (\r\n    <Items>\r\n      {items\r\n        ? items.map(item => <PostItem key={item.id} item={item} />)\r\n        : \"Loading...\"}\r\n    </Items>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  items: selector.getAllPosts(state)\r\n});\r\n\r\nexport default connect(mapStateToProps)(PostsList);\r\n\r\nconst Items = style.div`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  max-width: 1000px;\r\n  padding: 40px 20px;\r\n  border-bottom: 2px solid rgba(0,0,0,.05); \r\n  text-align: center;\r\n`;\r\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PostsList from \"./PostsList\";\nimport PostsListActions from \"../../redux/postsOperations\";\n\nclass PostsListContainer extends React.Component {\n  componentWillMount() {\n    const { fetchItems } = this.props;\n    fetchItems();\n  }\n\n  render() {\n    const { fetchRemoveItem } = this.props;\n    return <PostsList fetchItems={fetchRemoveItem} />;\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  fetchItems: value => dispatch(PostsListActions.fetchItems(value))\n});\n\nexport default connect(null, mapDispatchToProps)(PostsListContainer);\n","import React from \"react\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nconst NotFound: React.FC = () => {\r\n  return <Redirect to=\"/\" />;\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\n\ninterface HeaderBlockProps {\n  title: string;\n  description: string;\n  imageUrl: string;\n}\n\nconst HeaderBlock: React.FC<HeaderBlockProps> = ({\n  title,\n  description,\n  imageUrl\n}) => {\n  return (\n    <div style={{ backgroundImage: `url(${imageUrl})` }}>\n      <h1 style={{ color: `#191970`, textTransform: `uppercase` }}>{title}</h1>\n      <h3 style={{ color: `#778899` }}>{description}</h3>\n    </div>\n  );\n};\n\nHeaderBlock.defaultProps = {\n  title: \"My Test Blog React js | ts\",\n  description:\n    \"Cоздавайте компоненты с собственным состоянием, затем объединяйте их в сложные пользовательские интерфейсы.\",\n  imageUrl:\n    \"https://dgdesign.ru/uploads/posts/2019-08/1566569269_shapka-sayta-gorod-11614142.jpg\"\n};\n\nexport default HeaderBlock;\n","export default {\r\n  MAIN_POST_PAGE: \"/\",\r\n  POST_PAGE: \"/posts/:postId\",\r\n  CREATE_POST_PAGE: \"/posts/new\"\r\n};\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport routes from \"../routes\";\r\nimport style from \"styled-components\";\r\n\r\nconst Navigation: React.FC = () => (\r\n  <NavBlock>\r\n    <NavigationBar>\r\n      <NavItems>\r\n        <NavLink\r\n          exact\r\n          to={routes.MAIN_POST_PAGE}\r\n          style={{ textDecoration: \"none\" }}\r\n        >\r\n          <NavTitle>Main post page</NavTitle>\r\n        </NavLink>\r\n      </NavItems>\r\n      <NavItems>\r\n        <NavLink\r\n          to={routes.CREATE_POST_PAGE}\r\n          style={{ textDecoration: \"none\" }}\r\n        >\r\n          <NavTitle>Create New Post</NavTitle>\r\n        </NavLink>\r\n      </NavItems>\r\n    </NavigationBar>\r\n  </NavBlock>\r\n);\r\n\r\nexport default Navigation;\r\n\r\nconst NavBlock = style.div`\r\nbackground-color: #ADD8E6;\r\n`;\r\n\r\nconst NavigationBar = style.ul`\r\n  margin: 0;\r\n  padding: 0;\r\n  width: 200px;\r\n  padding: 8px 16px;\r\n`;\r\n\r\nconst NavItems = style.li`e;\r\ndisplay:inline-block;\r\ncolor: white;\r\n\r\n&:hover {\r\nbackground: #87CEEB;\r\n`;\r\n\r\nconst NavTitle = style.h4`\r\ncolor: #191970;\r\ntext-transform: uppercase;\r\n`;\r\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport { AddForm, PostsList, NotFound } from \".\";\nimport HeaderBlock from \"./HeaderBlock/HeaderBlock.\";\nimport Navigation from \"./Navigation\";\nimport routes from \"../routes\";\nimport style from \"styled-components\";\n\nclass App extends Component {\n  render() {\n    return (\n      <AppStyle>\n        <BrowserRouter>\n          <div>\n            <HeaderBlock />\n            <Navigation />\n            <Switch>\n              <Route exact path={routes.MAIN_POST_PAGE} component={PostsList} />\n              <Route path={routes.CREATE_POST_PAGE} component={AddForm} />\n              <Route path=\"*\" component={NotFound} />\n              <Redirect to=\"/\" />\n            </Switch>\n          </div>\n        </BrowserRouter>\n      </AppStyle>\n    );\n  }\n}\n\nexport default App;\n\nconst AppStyle = style.div`\ntext-align: center;\nbackground: #F0FFFF`;\n","import { combineReducers } from \"redux\";\r\nimport postsTypes from \"./postsTypes\";\r\n\r\nconst postsReduсer = (state = null, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case postsTypes.SET_ITEMS:\r\n      return payload;\r\n\r\n    case postsTypes.APPEND_ITEM:\r\n      return {\r\n        ...state,\r\n        items: state.items.map(item => {\r\n          if (item.id === action.data.item.id) {\r\n            return {\r\n              ...action.data.item\r\n            };\r\n          }\r\n          return item;\r\n        })\r\n      };\r\n\r\n    case postsTypes.REMOVE_ITEM:\r\n      return state.filter(item => item.id !== payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  items: postsReduсer\r\n});\r\n","import { combineReducers } from \"redux\";\r\nimport postsReduser from \"./postsReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  items: postsReduser\r\n});\r\n\r\ntype rootReducerType = typeof rootReducer;\r\n\r\nexport type AppStateType = ReturnType<rootReducerType>;\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport rootReducer from \"./rootReducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst middleware = [thunk];\r\nconst composeEnhancers = composeWithDevTools(applyMiddleware(...middleware));\r\n\r\nconst store = createStore(rootReducer, composeEnhancers);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport { Provider } from \"react-redux\";\n\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}