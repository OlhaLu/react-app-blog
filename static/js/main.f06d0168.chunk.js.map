{"version":3,"sources":["components/PostItem/PostItem.js","components/AddForm/AddForm.js","redux/postsSelectors.js","redux/postsTypes.js","redux/postsActions.js","services/api-service.js","redux/postsOperations.js","components/AddForm/AddFormContainer.js","components/PostsList/PostsList.js","components/PostsList/PostsListContainer.js","components/NotFound/NotFound.js","routes.js","components/Navigation.js","components/App.js","redux/postsReducer.js","redux/rootReducer.js","redux/store.js","index.js"],"names":["PostItem","item","title","id","onRemove","Item","to","Title","Button","onClick","LinkComment","style","div","h2","button","p","AddForm","onSubmit","event","preventDefault","Form","FormBlock","for","type","placeholder","form","label","state","items","postsTypes","SET_ITEMS","APPEND_ITEM","REMOVE_ITEM","payload","axios","require","defaults","baseURL","headers","get","post","put","delete","dispatch","api","then","data","postsActions","AddFormContainer","createNewPost","this","props","React","Component","connect","selector","value","PostsListActions","Items","map","key","PostsListContainer","fetchItems","fetchRemoveItem","NotFound","Navigation","NavigationBar","NavItems","exact","routes","ul","li","App","AppStyle","path","component","PostsList","combineReducers","action","filter","rootReducer","postsReduser","middleware","thunk","composeEnhancers","composeWithDevTools","applyMiddleware","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f06d0168.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport style from \"styled-components\";\r\n\r\nconst PostItem = ({ item: { title, id }, onRemove }) => {\r\n  const deleteItem = () => onRemove(id);\r\n\r\n  return (\r\n    <Item>\r\n      <Link to={`/posts/${id}`}>\r\n        <Title>{title}</Title>\r\n      </Link>\r\n      <Button onClick={deleteItem}>Remove</Button>\r\n      <LinkComment>\r\n        <Link to={`/posts/${id}?_embed=comments`}>edit comments</Link>\r\n      </LinkComment>\r\n    </Item>\r\n  );\r\n};\r\n\r\nexport default PostItem;\r\n\r\nconst Item = style.div`\r\nborder: #ECECEC 2px solid;`;\r\n\r\nconst Title = style.h2`\r\nfont-family: Georgia, \"Times New Roman\", Times, serif;\r\n  font-size: 24px;\r\n  letter-spacing: 1px;\r\n  max-width: 500px;\r\n  width: 100%;\r\n  position: relative;\r\n  display: inline-block;\r\n  color: #465457;`;\r\n\r\nconst Button = style.button`\r\n    background: #ECECEC;\r\n    font-size: 14px;\r\n\t\tborder-radius: 15px;\r\n\t\tpadding: 10px 20px;\r\n\t\tdisplay: block;\r\n\t\tfont-family: arial;\r\n\t\tfont-weight: bold;\r\n    color: #40a9ff;\r\n\t\ttext-decoration: none;\r\n\t\ttext-shadow:0px 1px 0px #fff;\r\n\t\tborder:1px solid #a7a7a7;\r\n\t\twidth: 145px;\r\n\t\tmargin:0px auto;\r\n\t\tbox-shadow: 0px 2px 1px white inset, 0px -2px 8px white, 0px 2px 5px rgba(0, 0, 0, 0.1), 0px 8px 10px rgba(0, 0, 0, 0.1);\r\n    -webkit-transition:box-shadow 0.5s;`;\r\n\r\nconst LinkComment = style.p`\r\n  font-size: 18px;\r\n  color: red;\r\n  font-family: Georgia, \"Times New Roman\", Times, serif;\r\n  text-decoration: none\r\n  text-transform: uppercase;\r\n    `;\r\n","import React from \"react\";\r\nimport style from \"styled-components\";\r\n\r\nconst AddForm = ({ onSubmit }) => {\r\n  onSubmit = event => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <Form>\r\n      <FormBlock>\r\n        <h4>\r\n          <label for=\"title\">Title</label>\r\n        </h4>\r\n        <input type=\"text\" id=\"title\" placeholder=\"Enter post title\" />\r\n      </FormBlock>\r\n      <FormBlock>\r\n        <h4>\r\n          <label for=\"description\">Description</label>\r\n        </h4>\r\n        <textarea placeholder=\"Enter text\" id=\"description\" />\r\n      </FormBlock>\r\n      <Button type=\"submit\" onSubmit={onSubmit}>\r\n        Submit\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default AddForm;\r\n\r\nconst Form = style.form`\r\n  font-size: 20px;\r\n  max-width: 500px;\r\n\tpadding: 10px 20px;\r\n\tbackground: #f4f7f8;\r\n  margin: 10px auto;\r\n\tpadding: 20px;\r\n\tbackground: #f4f7f8;\r\n\tborder-radius: 8px;\r\n  font-family: Georgia, \"Times New Roman\", Times, serif;\r\n`;\r\n\r\nconst FormBlock = style.label`\r\n  text-align: center;\r\n  background: #ECECEC;\r\n\tcolor: #40a9ff;\r\n\tfont-size: 0.8em;\r\n\tmargin-right: 4px;\r\n\tline-height: 30px;\r\n\ttext-shadow: 0 1px 0 rgba(255,255,255,0.2);\r\n\tborder-radius: 15px 15px 15px 0px;`;\r\n\r\nconst Button = style.button`\r\n    background: #ECECEC;\r\n    font-size: 14px;\r\n\t\tborder-radius: 15px;\r\n\t\tpadding: 10px 20px;\r\n\t\tdisplay: block;\r\n\t\tfont-family: arial;\r\n\t\tfont-weight: bold;\r\n    color: #40a9ff;\r\n\t\ttext-decoration: none;\r\n\t\ttext-shadow:0px 1px 0px #fff;\r\n\t\tborder:1px solid #a7a7a7;\r\n\t\twidth: 145px;\r\n\t\tmargin:0px auto;\r\n\t\tbox-shadow: 0px 2px 1px white inset, 0px -2px 8px white, 0px 2px 5px rgba(0, 0, 0, 0.1), 0px 8px 10px rgba(0, 0, 0, 0.1);\r\n    -webkit-transition:box-shadow 0.5s;`;\r\n","const getAllPosts = state => state.items && state.items.items;\r\n\r\n// const getPostById = state => state.items && state.items;\r\n\r\n// const getError = state => state.items.error;\r\n\r\nexport default {\r\n  getAllPosts\r\n  //   getPostById,\r\n  // getError\r\n};\r\n","const postsTypes = {\r\n  SET_ITEMS: \"posts/POSTS:SET_ITEMS\",\r\n  APPEND_ITEM: \"posts/POSTS:APPEND_ITEM\",\r\n  REMOVE_ITEM: \"posts/POSTS:REMOVE_ITEM\"\r\n};\r\n\r\nexport default postsTypes;\r\n","import postsTypes from \"./postsTypes\";\r\n\r\nconst setItems = items => ({\r\n  type: postsTypes.SET_ITEMS,\r\n  payload: items\r\n});\r\n\r\nconst appendItem = item => ({\r\n  type: postsTypes.APPEND_ITEM,\r\n  payload: item\r\n});\r\n\r\nconst removeItem = id => ({\r\n  type: postsTypes.REMOVE_ITEM,\r\n  payload: id\r\n});\r\n\r\nexport default { setItems, appendItem, removeItem };\r\n","const axios = require(\"axios\");\r\naxios.defaults.baseURL = \"https://simple-blog-api.crew.red\";\r\naxios.defaults.headers.get[\"Content-Type\"] = \"application/json\";\r\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json\";\r\naxios.defaults.headers.put[\"Content-Type\"] = \"application/json\";\r\n\r\nconst getPosts = () => {\r\n  return axios.get(`/posts`);\r\n};\r\n\r\nconst getPost = id => {\r\n  axios.get(`/posts/${id}?_embed=comments`);\r\n};\r\n\r\nconst createNewPost = () => {\r\n  axios.post(`/posts`);\r\n};\r\n\r\nconst removePost = id => {\r\n  axios.delete(`/posts/${id}`);\r\n};\r\n\r\nexport default {\r\n  getPosts,\r\n  getPost,\r\n  createNewPost,\r\n  removePost\r\n};\r\n","import postsActions from \"./postsActions\";\r\nimport api from \"../services/api-service\";\r\n\r\nconst fetchItems = () => dispatch => {\r\n  api.getPosts().then(({ data }) => {\r\n    dispatch(postsActions.setItems(data));\r\n  });\r\n};\r\n\r\nconst fetchItem = id => dispatch => {\r\n  api.getPosts(id).then(({ data }) => {\r\n    dispatch(postsActions.appendItem(data));\r\n  });\r\n};\r\n\r\nconst createNewPost = () => dispatch => {\r\n  api.createNewPost();\r\n};\r\n\r\nconst fetchRemoveItem = id => dispatch => {\r\n  dispatch(postsActions.removeItem(id));\r\n  api.removePost(id);\r\n};\r\n\r\nexport default {\r\n  fetchItems,\r\n  fetchItem,\r\n  createNewPost,\r\n  fetchRemoveItem\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport AddForm from \"./AddForm\";\r\nimport selector from \"../../redux/postsSelectors\";\r\nimport PostsListActions from \"../../redux/postsOperations\";\r\n\r\nclass AddFormContainer extends React.Component {\r\n  componentWillMount() {\r\n    const { createNewPost } = this.props;\r\n    createNewPost();\r\n  }\r\n\r\n  render() {\r\n    const { createNewPost } = this.props;\r\n    return <AddForm onSubmit={createNewPost} />;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  items: selector.getAllPosts(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  createNewPost: value => dispatch(PostsListActions.createNewPost(value))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddFormContainer);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PostItem from \"../PostItem\";\r\nimport selector from \"../../redux/postsSelectors\";\r\nimport style from \"styled-components\";\r\n\r\nconst PostsList = ({ items, onRemove }) => {\r\n  return (\r\n    <Items>\r\n      {items\r\n        ? items.map(item => (\r\n            <PostItem key={item.id} item={item} onRemove={onRemove} />\r\n          ))\r\n        : \"Loading...\"}\r\n    </Items>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  items: selector.getAllPosts(state)\r\n});\r\n\r\nexport default connect(mapStateToProps)(PostsList);\r\n\r\nconst Items = style.div`\r\n  padding: 20px 0;\r\n  border-bottom: 2px solid rgba(0,0,0,.05); \r\n  text-align: center;\r\n`;\r\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PostsList from \"./PostsList\";\nimport PostsListActions from \"../../redux/postsOperations\";\n\nclass PostsListContainer extends React.Component {\n  componentWillMount() {\n    const { fetchItems } = this.props;\n    fetchItems();\n  }\n\n  render() {\n    const { fetchRemoveItem } = this.props;\n    return <PostsList onRemove={fetchRemoveItem} />;\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  fetchItems: value => dispatch(PostsListActions.fetchItems(value)),\n  fetchRemoveItem: value => dispatch(PostsListActions.fetchRemoveItem(value))\n});\n\nexport default connect(null, mapDispatchToProps)(PostsListContainer);\n","import React from \"react\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nconst NotFound = () => {\r\n  return <Redirect to=\"/\" />;\r\n};\r\n\r\nexport default NotFound;\r\n","export default {\r\n  MAIN_POST_PAGE: \"/\",\r\n  POST_PAGE: \"/posts/:postId\",\r\n  CREATE_POST_PAGE: \"/posts/new\"\r\n};\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport routes from \"../routes\";\r\nimport style from \"styled-components\";\r\n\r\nconst Navigation = () => (\r\n  <NavigationBar>\r\n    <NavItems>\r\n      <NavLink exact to={routes.MAIN_POST_PAGE}>\r\n        Main post page\r\n      </NavLink>\r\n    </NavItems>\r\n    <NavItems>\r\n      <NavLink to={routes.CREATE_POST_PAGE}>Create New Post</NavLink>\r\n    </NavItems>\r\n  </NavigationBar>\r\n);\r\n\r\nexport default Navigation;\r\n\r\nconst NavigationBar = style.ul`\r\n list-style-type: none;\r\n  margin: 0;\r\n  padding: 0;\r\n  width: 200px;\r\n  background-color: #f1f1f1;\r\n`;\r\n\r\nconst NavItems = style.li`\r\ndisplay: block;\r\ncolor: #000;\r\npadding: 8px 16px;\r\ntext-decoration: none;\r\nbackground-color: #f1f1f1;\r\ncolor: white;\r\n\r\n&:hover {\r\n  background: #40a9ff;\r\n\r\n`;\r\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport { AddForm, PostsList, NotFound } from \"../components\";\nimport Navigation from \"./Navigation\";\nimport routes from \"../routes\";\nimport style from \"styled-components\";\n\nclass App extends Component {\n  render() {\n    return (\n      <AppStyle>\n        <BrowserRouter>\n          <div>\n            <Navigation />\n            <Switch>\n              <Route exact path={routes.MAIN_POST_PAGE} component={PostsList} />\n              <Route path={routes.CREATE_POST_PAGE} component={AddForm} />\n              <Route path=\"*\" component={NotFound} />\n              <Redirect to=\"/\" />\n            </Switch>\n          </div>\n        </BrowserRouter>\n      </AppStyle>\n    );\n  }\n}\n\nexport default App;\n\nconst AppStyle = style.div`\nbackground: #d3d3d3`;\n","import postsTypes from \"./postsTypes\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst postsReduсer = (state = null, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case postsTypes.SET_ITEMS:\r\n      return payload;\r\n\r\n    case postsTypes.APPEND_ITEM:\r\n      return payload;\r\n\r\n    case postsTypes.REMOVE_ITEM:\r\n      return state.filter(item => item.id !== payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  items: postsReduсer\r\n});\r\n","import { combineReducers } from \"redux\";\r\nimport postsReduser from \"./postsReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  items: postsReduser\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport rootReducer from \"./rootReducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst middleware = [thunk];\r\nconst composeEnhancers = composeWithDevTools(applyMiddleware(...middleware));\r\n\r\nconst store = createStore(rootReducer, composeEnhancers);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport { Provider } from \"react-redux\";\n\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}